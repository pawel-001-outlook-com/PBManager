@model PBManager.Dto.ViewModels.CashflowViewModel
@{
    ViewBag.Title = "Edit cashflow";

    SelectList categoriesComboBox = ViewBag.categoriesSelectList;

    SelectList accountsComboBox = ViewBag.accountsSelectList;

    SelectList subcategoriesComboBox = new SelectList(Model.Subcategories, "Id", "Name", "Category.Name", new { });

    SelectList projectsComboBox = ViewBag.projectsSelectList;
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Title
            <br /><small>Edit a cashflow</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href=""><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="@Url.Action("Index", "Cashflows")">Cashflows</a></li>
            <li class="active">@ViewBag.Title</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-md-8">
                <div class="box box-primary">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-8">
                                <form role="form" action="@Url.Action("Edit", "Cashflows")" method="post">
                                    <span class="text-red">@Html.ValidationSummary()</span>
                                    <div class="row">
                                        <div class="col-xs-2">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Id)
                                                @Html.TextBoxFor(m => m.Id, new { Class = "form-control", Readonly = "readonly" })
                                            </div>
                                        </div>




                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Name)
                                                @Html.TextBoxFor(m => m.Name, new { Class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Name, "", new { Class = "text-red" })
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-md-8">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Description)
                                                @Html.TextAreaFor(m => m.Description, new { Class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Description, "", new { Class = "text-red" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.AccountingDate)
                                                @Html.TextBoxFor(m => m.AccountingDate, new { Class = "form-control", Type = "date", Value = Model.AccountingDate.ToShortDateString() })
                                                @Html.ValidationMessageFor(m => m.AccountingDate, "", new { Class = "text-red" })
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.Value)
                                                @Html.TextBoxFor(m => m.Value, new { Class = "form-control", Type = "text", Pattern = @"[0-9]+[\,]*[0-9]+" })
                                                @* @Html.TextBoxFor(m => m.Value, new { Class = "form-control" , Type = "number" }) *@
                                                @* @Html.ValidationMessageFor(m => m.Value, "", new { Class = "text-red" }) *@
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.AccountId, "Account")
                                                @Html.DropDownListFor(m => m.AccountId, accountsComboBox, "(Choose one)", new { Class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.AccountId, "", new { Class = "text-red" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.CategoryId, "Category")
                                                @Html.DropDownListFor(m => m.CategoryId, categoriesComboBox, "(Choose one)", new { Class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.SubcategoryId, "Subcategory")
                                                @Html.DropDownListFor(m => m.SubcategoryId, subcategoriesComboBox, "(Choose one)", new { Class = "form-control" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.ProjectId, "Project")
                                                @Html.DropDownListFor(m => m.ProjectId, projectsComboBox, "(Optional)", new { Class = "form-control" })
                                            </div>
                                        </div>
                                    </div>


                                    @Html.HiddenFor(m => m.Cashflow.Id)
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-primary btn-flat pull-left"><i class="fa fa-floppy-o"></i> Save </button>
                                </form>
                            </div>



                        </div>
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>

            <div class="col-md-4"></div>

        </div>

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->




@Scripts.Render("~/Bundles/js")
@Scripts.Render("~/bundles/jqueryval")

@section Scripts {
    <script type="text/javascript">
        //        $('#CategoryId').on('changed.bs.select #CategoryId',
        $('#CategoryId').change(
            function() {
                var selectedCategory = $('#CategoryId').val();
                var subcategorySelect = $('#SubcategoryId');
                subcategorySelect.empty();
                if (selectedCategory != null && selectedCategory != '') {
                    $.getJSON('@Url.Action("GetCategoryAndSubcategories")',
                        { categoryId: selectedCategory },
                        function(subcategories) {
                            if (subcategories != null && !jQuery.isEmptyObject(subcategories)) {
                                subcategorySelect.append($('<option/>',
                                    {
                                        value: "",
                                        text: "(Choose one [updated])"
                                    }));
                                $.each(subcategories,
                                    function(index, subcategory) {
                                        subcategorySelect.append($('<option/>',
                                            {
                                                value: subcategory.Value,
                                                text: subcategory.Text
                                            }));
                                    });
                            };
                        });
                }
            });
    </script>
}