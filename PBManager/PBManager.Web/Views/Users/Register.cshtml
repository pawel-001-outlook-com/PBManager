@{
    Layout = null;
}

@model PBManager.Dto.ViewModels.RegisterViewModel


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Register | PBManager</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">

    @Styles.Render("~/Bundles/css")
</head>


<body class="hold-transition login-page">
    <div class="register-box">
        <!-- register-logo -->
        <div class="register-logo">
            <b>PBM</b>anager
        </div><!-- /.register-logo -->
        <!-- register-box-body -->
        <div class="register-box-body">
            <p class="login-box-msg">Register new user</p>
            
            @if (Model.CreatedSuccessfully != null && Model.CreatedSuccessfully == false)
            {
                <div class="box-body">
                    <div class="alert alert-danger alert-dismissable">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4>	<i class="icon fa fa-check"></i> Error!</h4>
                        Selected UserName already exists
                        <br/>Chages were not saved
                    </div>
                </div>
            }

            <form action="@Url.Action("Register", "Users")" method="post">
                @Html.AntiForgeryToken()

                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.UserName, new { @type = "text", @class = "form-control", @placeholder = "Username" })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { Class = "text-red" })
                    <span class="glyphicon glyphicon-circle-arrow-left form-control-feedback"></span>
                </div>

                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.FirstName, new { @type = "text", @class = "form-control", @placeholder = "FirstName" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>

                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Surname, new { @type = "text", @class = "form-control", @placeholder = "Surname" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>

                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Email, new { @type = "email", @class = "form-control", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { Class = "text-red" })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                </div>

                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.Password, new { @type = "password", @class = "form-control", @placeholder = "User password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { Class = "text-red" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                </div>

                <div class="form-group has-feedback">
                    @Html.PasswordFor(m => m.ConfirmationPassword, new { @type = "password", @class = "form-control", @placeholder = "Confimrtion password" })
                    @Html.ValidationMessageFor(m => m.ConfirmationPassword, "", new { Class = "text-red" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                </div>

                <div class="row">

                    <div class="col-xs-8">
                    </div><!-- /.col -->

                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Register</button>
                    </div><!-- /.col -->

                </div>
            </form>

            
        </div><!-- /.register-box-body -->
    </div><!-- /.register-box -->


    @Scripts.Render("~/Bundles/js")
    @Scripts.Render("~/bundles/jqueryval")

     <script type="text/javascript">
         $(function () {
             $('input').iCheck({
                 checkboxClass: 'icheckbox_square-blue',
                 radioClass: 'iradio_square-blue',
                 increaseArea: '20%' // optional
             });
         });
     </script>

</body>
</html>

